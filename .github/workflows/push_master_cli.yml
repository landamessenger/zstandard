name: Build CLI

on:
  push:
    branches:
      - develop
    paths:
      - "zstandard_cli/**"


concurrency:
  group: ${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true


jobs:
  cli_build_macos_precompiled_libs:
    name: macOS precompiled libraries
    runs-on: [self-hosted, macOS]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Landa Messenger CLI
        run: npm install @landamessenger/landa-messenger-api -g

      - name: Download source files from facebook/zstd
        run: |
          cd zstandard_cli
          git clone https://github.com/facebook/zstd.git
          mkdir src
          mv zstd/lib/* src/
          rm -rf zstd/

      - name: List files in zstd/lib to verify
        run: cd zstandard_cli && ls -R src

      - name: Compile x86-x64 macos lib
        run: |
          cd zstandard_cli/builders/macos_intel
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release
          mv libzstandard_macos.dylib ../../../lib/src/bin/libzstandard_macos_intel.dylib
          cd ..
          rm -rf build

      - name: Compile arm64 macos lib
        run: |
          cd zstandard_cli/builders/macos_arm
          mkdir build && cd build
          cmake -DCMAKE_OSX_ARCHITECTURES=arm64 ..
          cmake --build . --config Release
          mv libzstandard_macos.dylib ../../../lib/src/bin/libzstandard_macos_arm.dylib
          cd ..
          rm -rf build

      - name: Join libs
        run: |
          cd zstandard_cli/lib/src/bin
          lipo -create -output libzstandard_macos.dylib libzstandard_macos_intel.dylib libzstandard_macos_arm.dylib
          rm libzstandard_macos_arm.dylib
          rm libzstandard_macos_intel.dylib

      - name: Verify libs
        run: |
          cd zstandard_cli/lib/src/bin
          lipo -info libzstandard_macos.dylib

      - name: Commit and Push Library
        uses: EndBug/add-and-commit@v9
        with:
          add: './zstandard_cli/lib/src/bin/libzstandard_macos.dylib'
          committer_name: GitHub Actions
          committer_email: actions@github.com
          default_author: user_info
          message: 'gh-action: Add precompiled macOS libraries for x86_64 and arm64'

  cli_build_linux_precompiled_libs:
    name: Linux precompiled libraries
    runs-on: [self-hosted, Linux]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Landa Messenger CLI
        run: npm install @landamessenger/landa-messenger-api -g

      - name: Install cross-compilation toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Download source files from facebook/zstd
        run: |
          cd zstandard_cli
          git clone https://github.com/facebook/zstd.git
          mkdir src
          mv zstd/lib/* src/
          rm -rf zstd/

      - name: List files in zstd/lib to verify
        run: cd zstandard_cli && ls -R src

      - name: Compile x86_64 Linux lib
        run: |
          cd zstandard_cli/builders/linux_x64
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release
          mv libzstandard_linux.so ../../../lib/src/bin/libzstandard_linux_x64.so
          cd ..
          rm -rf build

      - name: Compile arm64 Linux lib
        run: |
          cd zstandard_cli/builders/linux_arm
          mkdir build && cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=../arm64-toolchain.cmake ..
          cmake --build . --config Release
          mv libzstandard_linux.so ../../../lib/src/bin/libzstandard_linux_arm64.so
          cd ..
          rm -rf build

      - name: Verify Linux libs
        run: |
          cd zstandard_cli/lib/src/bin
          file libzstandard_linux_x64.so
          file libzstandard_linux_arm64.so

      - name: Commit and Push Library
        uses: EndBug/add-and-commit@v9
        with:
          add: './zstandard_cli/lib/src/bin/'
          committer_name: GitHub Actions
          committer_email: actions@github.com
          default_author: user_info
          message: 'gh-action: Add precompiled Linux libraries for x86_64 and arm64'

  cli_build_windows_precompiled_libs:
    name: Windows precompiled libraries
    runs-on: [self-hosted, Windows]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Landa Messenger CLI
        shell: cmd
        run: npm install -g @landamessenger/landa-messenger-api

      - name: Download source files from facebook/zstd
        shell: cmd
        run: |
          cd zstandard_cli
          git clone https://github.com/facebook/zstd.git
          mkdir src
          xcopy zstd\lib src\ /E /I
          rmdir /S /Q zstd

      - name: List files in zstd/lib to verify
        shell: cmd
        run: dir zstandard_cli\src /S

      - name: Compile x86_64 Windows lib
        shell: cmd
        run: |
          cd zstandard_cli/builders/windows_x64
          mkdir build && cd build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          cmake --build . --config Release
          cd Release
          move zstandard_windows.dll ..\..\..\..\lib\src\bin\zstandard_windows_x64.dll
          cd ..
          cd ..
          rmdir /S /Q build

      - name: Compile arm64 Windows lib
        shell: cmd
        run: |
          cd zstandard_cli/builders/windows_arm
          mkdir build && cd build
          cmake -G "Visual Studio 17 2022" -A ARM64 ..
          cmake --build . --config Release
          cd Release
          move zstandard_windows.dll ..\..\..\..\lib\src\bin\zstandard_windows_arm64.dll
          cd ..
          cd ..
          rmdir /S /Q build

      - name: Verify Windows libs architecture
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64
          dumpbin /headers zstandard_cli/lib/src/bin/zstandard_windows_x64.dll | findstr /c:"machine"
          dumpbin /headers zstandard_cli/lib/src/bin/zstandard_windows_arm64.dll | findstr /c:"machine"

      - name: Commit and Push Library
        uses: EndBug/add-and-commit@v9
        with:
          add: './zstandard_cli/lib/src/bin/'
          committer_name: GitHub Actions
          committer_email: actions@github.com
          default_author: user_info
          message: 'gh-action: Add precompiled Windows libraries for x86_64 and arm64'
