name: Build CLI

on:
  push:
    branches:
      - master
    # paths:
      # - "zstandard_cli/**"

jobs:
  macos_precompiled_libs:
    name: macOS precompiled libraries
    runs-on: [self-hosted, macOS]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Landa Messenger CLI
        run: npm install @landamessenger/landa-messenger-api -g

      - name: Download source files from facebook/zstd
        run: |
          cd zstandard_cli
          git clone https://github.com/facebook/zstd.git
          mkdir src
          mv zstd/lib/* src/
          rm -rf zstd/

      - name: List files in zstd/lib to verify
        run: cd zstandard_cli && ls -R src

      - name: Compile x86-x64 macos lib
        run: |
          cd zstandard_cli/builders/macos_intel
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release
          mv libzstandard_macos.dylib ../../../lib/src/bin/libzstandard_macos_intel.dylib
          cd ..
          rm -rf build

      - name: Compile arm64 macos lib
        run: |
          cd zstandard_cli/builders/macos_arm
          mkdir build && cd build
          cmake -DCMAKE_OSX_ARCHITECTURES=arm64 ..
          cmake --build . --config Release
          mv libzstandard_macos.dylib ../../../lib/src/bin/libzstandard_macos_arm.dylib
          cd ..
          rm -rf build

      - name: Join libs
        run: |
          cd zstandard_cli/lib/src/bin
          lipo -create -output libzstandard_macos.dylib libzstandard_macos_intel.dylib libzstandard_macos_arm.dylib
          rm libzstandard_macos_arm.dylib
          rm libzstandard_macos_intel.dylib

      - name: Verify libs
        run: |
          cd zstandard_cli/lib/src/bin
          lipo -info libzstandard_macos.dylib

      - name: Commit and Push Library
        uses: EndBug/add-and-commit@v9
        with:
          add: './zstandard_cli/lib/src/bin/libzstandard_macos.dylib'
          committer_name: GitHub Actions
          committer_email: actions@github.com
          default_author: user_info
          message: 'gh-action: Add precompiled macOS libraries for x86_64 and arm64'

  linux_precompiled_libs:
    name: Linux precompiled libraries
    runs-on: [self-hosted, Linux]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Landa Messenger CLI
        run: npm install @landamessenger/landa-messenger-api -g

      - name: Install cross-compilation toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Download source files from facebook/zstd
        run: |
          cd zstandard_cli
          git clone https://github.com/facebook/zstd.git
          mkdir src
          mv zstd/lib/* src/
          rm -rf zstd/

      - name: List files in zstd/lib to verify
        run: cd zstandard_cli && ls -R src

      - name: Compile x86_64 Linux lib
        run: |
          cd zstandard_cli/builders/linux_x64
          mkdir build && cd build
          cmake ..
          cmake --build . --config Release
          mv libzstandard_linux.so ../../../lib/src/bin/libzstandard_linux_x64.so
          cd ..
          rm -rf build

      - name: Compile arm64 Linux lib
        run: |
          cd zstandard_cli/builders/linux_arm
          mkdir build && cd build
          cmake -DCMAKE_TOOLCHAIN_FILE=../arm64-toolchain.cmake ..
          cmake --build . --config Release
          mv libzstandard_linux.so ../../../lib/src/bin/libzstandard_linux_arm64.so
          cd ..
          rm -rf build

      - name: Verify Linux libs
        run: |
          cd zstandard_cli/lib/src/bin
          file libzstandard_linux_x64.so
          file libzstandard_linux_arm64.so

      - name: Commit and Push Library
        uses: EndBug/add-and-commit@v9
        with:
          add: './zstandard_cli/lib/src/bin/'
          committer_name: GitHub Actions
          committer_email: actions@github.com
          default_author: user_info
          message: 'gh-action: Add precompiled Linux libraries for x86_64 and arm64'

  windows_precompiled_libs:
    name: Windows precompiled libraries
    runs-on: [self-hosted, Windows]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Landa Messenger CLI
        shell: cmd
        run: npm install -g @landamessenger/landa-messenger-api

      - name: Download source files from facebook/zstd
        shell: pwsh
        run: |
          cd zstandard_cli
          git clone https://github.com/facebook/zstd.git
          mkdir src
          Copy-Item -Path "zstd/lib/*" -Destination "src" -Recurse
          Remove-Item -Recurse -Force zstd

      - name: List files in zstd/lib to verify
        shell: pwsh
        run: |
          Get-ChildItem -Recurse zstandard_cli/src

      - name: Compile x86_64 Windows lib
        run: |
          cd zstandard_cli/builders/windows_x64
          mkdir build && cd build
          cmake -G "Visual Studio 17 2022" -A x64 ..
          cmake --build . --config Release
          cd Release
          move zstandard_windows.dll ../../../lib/src/bin/zstandard_windows_x64.dll
          cd ..
          cd ..
          rm -rf build

      - name: Compile arm64 Windows lib
        run: |
          cd zstandard_cli/builders/windows_arm
          mkdir build && cd build
          cmake -G "Visual Studio 17 2022" -A ARM64 ..
          cmake --build . --config Release
          cd Release
          move zstandard_windows.dll ../../../lib/src/bin/zstandard_windows_arm.dll
          cd ..
          cd ..
          rm -rf build

      - name: Verify Windows libs architecture
        shell: pwsh
        run: |
          cd zstandard_cli/lib/src/bin

          function Get-DllArchitecture($filePath) {
            $bytes = [System.IO.File]::ReadAllBytes($filePath)[0..63]
            $peHeaderOffset = [BitConverter]::ToInt32($bytes, 0x3C)
            $machine = [BitConverter]::ToUInt16($bytes, $peHeaderOffset + 4)

            switch ($machine) {
              0x8664 { "x64" }
              0xAA64 { "ARM64" }
              0x014C { "x86" }
              Default { "Unknown architecture" }
            }
          }

          $x64Arch = Get-DllArchitecture "zstandard_windows_x64.dll"
          $arm64Arch = Get-DllArchitecture "zstandard_windows_arm64.dll"

          Write-Output "Architecture of zstandard_windows_x64.dll: $x64Arch"
          Write-Output "Architecture of zstandard_windows_arm64.dll: $arm64Arch"
      

      - name: Commit and Push Library
        uses: EndBug/add-and-commit@v9
        with:
          add: './zstandard_cli/lib/src/bin/'
          committer_name: GitHub Actions
          committer_email: actions@github.com
          default_author: user_info
          message: 'gh-action: Add precompiled Windows libraries for x86_64 and arm64'
